import 'reflect-metadata';
import { NestFactory } from '@nestjs/core';
import { AppModule } from './app.module';
import { ValidationPipe } from '@nestjs/common';
import { SwaggerModule, DocumentBuilder } from '@nestjs/swagger';
import { readFileSync } from 'fs';
import { join } from 'path';
import { HttpsOptions } from '@nestjs/common/interfaces/external/https-options.interface';

import * as dotenv from 'dotenv'; dotenv.config();

async function bootstrap() {
  // 1. –ó–∞–≥—Ä—É–∂–∞–µ–º SSL-—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
  const httpsOptions: HttpsOptions = {
    key: readFileSync(join(__dirname, '..', 'ssl', 'key.pem')),
    cert: readFileSync(join(__dirname, '..', 'ssl', 'cert.pem')),
    ca: readFileSync(join(__dirname, '..', 'ssl', 'chain.pem')),
  };

  const app = await NestFactory.create(AppModule, { httpsOptions });

  app.enableCors({
    origin: true,
    credentials: true,
    optionsSuccessStatus: 200,
    methods: 'GET,POST,PUT,DELETE,OPTIONS,PATCH',
    allowedHeaders: ['Content-Type', 'Authorization'],
  });

  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π –ø—Ä–µ—Ñ–∏–∫—Å 'api' ‚Äî —Ç–æ–≥–¥–∞ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—ã —Å @Controller('banks') –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ /api/banks
  app.setGlobalPrefix('api');

  app.useGlobalPipes(
    new ValidationPipe({
      whitelist: true,
      forbidNonWhitelisted: true,
      transform: true,
      disableErrorMessages: false,
    }),
  );

  const config = new DocumentBuilder()
    .setVersion('1.0')
    .addBearerAuth()
    .build();

  // –ü–µ—Ä–µ–¥–∞—ë–º include: [BanksModule] —á—Ç–æ–±—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–∫–ª—é—á–µ–Ω–∏–µ endpoints –±–∞–Ω–∫–æ–≤ –≤ Swagger
  const document = SwaggerModule.createDocument(app, config);

  // Swagger UI –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ /api/docs (global prefix + 'docs')
  SwaggerModule.setup('docs', app, document);

  await app.listen(3001, '0.0.0.0');
  console.log(`üöÄ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ`);
}
bootstrap();